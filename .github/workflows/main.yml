name: EC2 auto deploy via Bastion Host

on:
# ... (略)
      # 変更点 C: 複雑な二重SSH構造を廃止し、Configで定義した 'private-ec2' への単一接続に置き換えます。
      - name: Deploy via Bastion Host
        run: |
          echo "::group::プライベートEC2へのデプロイを開始"
          echo "Configファイル経由でプライベートEC2サーバーへのSSH接続を試行中..."
          # Configで定義したホスト名 'private-ec2' に接続します。
          ssh private-ec2 "
            
            # --- 修正点: コマンド失敗時に即時終了し、実行コマンドを出力する設定を追加 ---
            set -eux 
            
            echo '::notice::プライベートEC2に接続しました。デプロイ処理を開始します。'
            
            # 鍵ファイルはAgent Forwarding経由で提供されるため、ファイル書き出し処理は不要です。
            echo '::notice::Agent Forwarding経由でGitHub認証を試行します。'
            
            echo 'デプロイディレクトリの確認と作成...'
            # ユーザー名を動的に使用してディレクトリを作成し、パーミッションを設定
            sudo mkdir -p /home/${{ secrets.EC2_USER_NAME }}/test &&
            sudo chown -R ${{ secrets.EC2_USER_NAME }}:${{ secrets.EC2_USER_NAME }} /home/${{ secrets.EC2_USER_NAME }}/test &&
            echo 'デプロイディレクトリの準備が完了しました。'
            
            echo 'GitHubホスト鍵の known_hosts への追加...'
            mkdir -p ~/.ssh &&
            ssh-keyscan github.com >> ~/.ssh/known_hosts &&
            echo 'GitHubホスト鍵の追加が完了しました。'
            
            # 修正 3: 初期クローン時、カレントディレクトリに展開するように修正します。
            if [ ! -d /home/${{ secrets.EC2_USER_NAME }}/test/.git ]; then
              echo '::notice::リポジトリが検出されませんでした。git clone を実行します。'
              
              # ターゲットディレクトリに移動
              cd /home/${{ secrets.EC2_USER_NAME }}/test;

              # 確実に空にしてからクローンし、カレントディレクトリ(.)に内容を展開させる
              rm -rf * .*;
              git clone --depth 1 git@github.com:sui-guest-ix/test-sui.git .;
              
              echo '::notice::git clone が完了しました。'
            else
              echo '::notice::リポジトリを検出しました。git pullを実行します。'
              cd /home/${{ secrets.EC2_USER_NAME }}/test &&
              git fetch --prune &&
              git checkout master &&
              git pull origin master;
              echo '::notice::git pull が完了しました。'
            fi
            
            # 追加: デバッグ用にクローン/プル後のディレクトリ内容を表示
            echo '::notice::デプロイディレクトリの内容を確認します:'
            ls -al /home/${{ secrets.EC2_USER_NAME }}/test/
            
            echo '::notice::デプロイ処理が完了しました。'
          "
          echo "::notice::プライベートEC2へのSSHセッションが正常に終了しました。"
          echo "::endgroup::"

      - name: Revoke Security Group Ingress
# ... (略)
